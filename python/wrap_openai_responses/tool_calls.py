import json

import openai
from langsmith import traceable
from langsmith.wrappers import wrap_openai

client = wrap_openai(openai.Client())


tools = [
    {
        "type": "function",
        "name": "get_horoscope",
        "description": "Get today's horoscope for an astrological sign.",
        "parameters": {
            "type": "object",
            "properties": {
                "sign": {
                    "type": "string",
                    "description": "An astrological sign like Taurus or Aquarius",
                },
            },
            "required": ["sign"],
        },
    },
]


@traceable(name="Responses API Tool Calls")
def responses_api_tool_calls():
    """Responses API with tool calls."""
    input_list = [
        {"role": "user", "content": "What is my horoscope? I am an Aquarius."}
    ]

    # Initial request
    response = client.responses.create(
        model="gpt-5",
        tools=tools,
        input=input_list,
    )

    # Add response output to input
    input_list.extend(response.output)

    # Process function calls
    for item in response.output:
        if item.type == "function_call":
            if item.name == "get_horoscope":
                # Mock function execution
                horoscope = f"{json.loads(item.arguments)}: Next Tuesday you will befriend a baby otter."

                # Add function result
                input_list.append(
                    {
                        "type": "function_call_output",
                        "call_id": item.call_id,
                        "output": json.dumps({"horoscope": horoscope}),
                    }
                )

    # Final request with function results
    final_response = client.responses.create(
        model="gpt-5",
        instructions="Respond only with a horoscope generated by a tool.",
        tools=tools,
        input=input_list,
    )

    print(f"Tool call response: {final_response.output_text}")
    return final_response


def main():
    print("Running wrap_openai responses API tool calls example...")
    responses_api_tool_calls()
    return {"tool_calls": "complete"}
